#!/usr/bin/expect -f

set timeout -1
set args [lrange $argv 0 end]

foreach arg $args {
  if {[string match --help $arg]} {
    puts "Welcome, this are args available:\n1) backend -> used to build only backend canisters\n2) modules -> used to build dynamic canister wasm modules"
    exit 0
  }
}

# Changed git branch to main
spawn git checkout main
expect eof
puts "Changed git branch to main"

# Identity changed to cerotrade
spawn dfx identity use cerotrade
expect eof
puts "Identity changed to cerotrade"

# Request identity passphrase
send_user "Please enter the passphrase for your identity: "
expect_user -re "(.*)\n"
set passphrase $expect_out(1,string)

proc expectPassphrase {passphrase} {
  expect {
    "Please enter the passphrase for your identity:" {
      send "$passphrase\r"
      exp_continue
    }
    eof
  }
}

# Generate declarations
puts "====-Generate declarations-===="
spawn mkdir -p .dfx/local/canisters/cero_trade_project_frontend && cp assetstorage.did .dfx/local/canisters/cero_trade_project_frontend/assetstorage.did
expect eof

spawn dfx generate
expect eof

set canisterDeclarations {users user_index token token_index transactions transaction_index agent marketplace http_service statistics notifications notification_index bucket bucket_index}

foreach canister $canisterDeclarations {
  spawn cp src/declarations/$canister/* .dfx/local/canisters/$canister/
  expect eof
}

# Generate env.mo and build canisters
set canisters {http_service agent}

if {[lsearch -exact $args "--backend"] != -1 || [lsearch -exact $args "backend"] != -1} {
  puts "====-Generate env.mo and build canisters-===="
  spawn npm install
  expect eof
  set canisters [linsert $canisters 0 "cero_trade_project_frontend"]
} else {
  puts "====-Build backend canisters-===="
}

foreach canister $canisters {
  spawn dfx build $canister --network ic
  expectPassphrase $passphrase
}

if {[lsearch -exact $args "--modules"] != -1 || [lsearch -exact $args "modules"] != -1} {
  set dynamicCanisters {token users transactions notifications bucket}

  # Register wasm modules
  puts "====-Register wasm modules-===="
  foreach canister $dynamicCanisters {
    puts "====-$canister-===="
    spawn dfx build $canister --network ic
    expectPassphrase $passphrase
  }

  # Generate the wasm module like array
  puts "====-Generate the wasm module like array-===="
  foreach canister $dynamicCanisters {
    puts "====-$canister-===="
    spawn npm run generate-wasm $canister ic
    expectPassphrase $passphrase
  }

  # Push the current ./wasm_modules commit folder to github
  puts "====-Push the current ./wasm_modules commit folder to github-===="
  spawn git pull
  expect eof
  spawn git add ./wasm_modules
  expect eof
  spawn git commit -m "config/new-wasm-modules"
  expect eof
  spawn git push
  expect eof
}